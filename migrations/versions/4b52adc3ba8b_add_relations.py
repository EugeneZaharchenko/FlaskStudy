"""add relations

Revision ID: 4b52adc3ba8b
Revises: e71ddb7ac5fd
Create Date: 2024-09-26 23:31:49.470681

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4b52adc3ba8b'
down_revision = 'e71ddb7ac5fd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('films',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('distributed_by', sa.String(length=128), nullable=False),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('films', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_films_release_date'), ['release_date'], unique=False)

    op.create_table('movies_actors',
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('film_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['film_id'], ['films.id'], ),
    sa.PrimaryKeyConstraint('actor_id', 'film_id')
    )
    op.drop_table('actor')
    with op.batch_alter_table('film', schema=None) as batch_op:
        batch_op.drop_index('ix_film_release_date')

    op.drop_table('film')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('film',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('release_date', sa.DATE(), nullable=False),
    sa.Column('uuid', sa.VARCHAR(length=36), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('distributed_by', sa.VARCHAR(length=128), nullable=False),
    sa.Column('length', sa.FLOAT(), nullable=True),
    sa.Column('rating', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('film', schema=None) as batch_op:
        batch_op.create_index('ix_film_release_date', ['release_date'], unique=False)

    op.create_table('actor',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('birthday', sa.DATE(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=False)
    )
    op.drop_table('movies_actors')
    with op.batch_alter_table('films', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_films_release_date'))

    op.drop_table('films')
    op.drop_table('actors')
    # ### end Alembic commands ###
